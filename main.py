import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import random
import sqlite3
import requests
con = sqlite3.connect('database.db')
cur = con.cursor()
try:
    cur.execute('''CREATE TABLE users(user_id UNIQUE, marriage TEXT, about TEXT, prize TEXT, who TEXT, nickname TEXT, duel TEXT, respect INT, duels_win INT, duels_lose INT)''')
    con.commit()
except:
    pass


# ------- bot token and connect api ----------
TOKEN = 'You token'
vk = vk_api.VkApi(token=TOKEN)
longpoll = VkBotLongPoll(vk, 202560573)
vks = vk.get_api()
# ---------------------------------------


def send(message='hello', keyboard=''):
    if event.from_chat:
        vk.method('messages.send', {'chat_id': event.chat_id, 'message': message, 'random_id': random.getrandbits(64), 'disable_mentions': 1, 'keyboard': keyboard})

def exec(execute):
    cur.execute(execute)
    con.commit()


def get(value, user_id):
    return cur.execute(f'''SELECT {value} FROM users WHERE user_id={user_id}''').fetchone()


def get_all(value):
    return cur.execute(f'''SELECT {", ".join(value)} FROM users''').fetchall()


# ------- longpool ---------
for event in longpoll.listen():
    if event.type == VkBotEventType.MESSAGE_NEW:    # —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            if event.obj['action']['type'] == 'chat_invite_user':
                send('–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º —á–∞—Ç–µüòÉüëã')
            if event.obj['action']['type'] == 'chat_kick_user':
                send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω –∏–∑ —á–∞—Ç–∞üïØüò¢')
        except:
            pass
        my_id = event.obj.from_id
        text = event.obj.text.lower()
        user_get = vks.users.get(user_ids=my_id, fields=['screen_name'])
        user_get = user_get[0]
        my_name, my_surname = user_get['first_name'], user_get['last_name']
        if 'reply_message' in event.obj:
            if '-' not in str(event.obj.reply_message['from_id']):
                user_id = event.obj.reply_message['from_id']
                sender_user_get = vks.users.get(user_ids=user_id , fields=['screen_name'])[0]
                user_name, user_surname = sender_user_get['first_name'], sender_user_get['last_name']
                sc2_name = sender_user_get['screen_name']
                cur.execute(
                    f'''INSERT OR IGNORE INTO users(user_id, marriage, about, prize, who, nickname, duel, duels_win, duels_lose) VALUES({user_id}, "no", "–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", "–Ω–µ—Ç –ø—Ä–∏–∑–∞", "no", "no", "no", 0, 0)''')
                con.commit()
        else:
            user_name, user_surname = False, False

        try:
            status, whom, nickname = get('status', my_id)[0], get('who', my_id)[0], get('nickname', my_id)[0]
        except:
            cur.execute(
                f'''INSERT OR IGNORE INTO users(user_id, marriage, about, prize, who, nickname, duel) VALUES({my_id}, "no", "–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", "–Ω–µ—Ç –ø—Ä–∏–∑–∞", "no", "no", "no")''')
            con.commit()

        if '–¥–∂–µ–∫' in text[:5] or 'jack' in text[:5] or '–¥–∂–æ' in text[:4] or 'jo' in text[:3] or '/' in text[:2] or '!' in text[:2]:
            marriage = get('marriage', my_id)[0]
            if '–æ –º–Ω–µ' in text:
                exec(f'''UPDATE users SET about="{text.split("–æ –º–Ω–µ")[1]}"''')
                send('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∞‚úÖ')
            elif '–∫–∞–∫ —Ç—ã' in text:
                send('–∑–∞–º—É—Ä—Ä—Ä—á–∞—Ç–µ–ª—å–Ω–æüò∏\n–í–ø—Ä–æ—á–µ–º –∫–∞–∫ –≤—Å–µ–≥–¥–∞)')
            elif '–±—Ä–∞–∫–∏' in text:
                marriages = []
                for i in get_all(['marriage']):
                    if i[0] != 'no':
                        marriages.append(i[0])
                marriages = '\n'.join(marriages)
                send(f'–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±—Ä–∞–∫–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è:\n{marriages}')
            elif '–º–æ–π –±—Ä–∞–∫' in text:
                if marriage != 'no':
                    send(f'–£ –≤–∞—Å –µ—Å—Ç—å –±—Ä–∞–∫ —Å {marriage}')
                else:
                    send('–£ –≤–∞—Å –Ω–µ—Ç –±—Ä–∞–∫–∞!')
            elif '—Ä–∞–∑–≤–æ–¥' in text:
                if marriage != 'no':
                    exec(f'''UPDATE users SET marriage="no" WHERE marriage="{my_name} {my_surname}"''')
                    exec(f'''UPDATE users SET marriage="no" WHERE marriage="{marriage}"''')
                    send(f'–¢–µ–ø–µ—Ä—å –≤—ã –≤ —Ä–∞–∑–≤–æ–¥–µ c {marriage}üíî')
                else:
                    send('–£ –≤–∞—Å –∏ —Ç–∞–∫ –Ω–µ—Ç –±—Ä–∞–∫–æ–≤‚ùó')
            elif '–ø—Ä–æ—Ñ–∏–ª—å' in text:
                res = cur.execute(
                    f'''SELECT marriage, about, prize, who, nickname, respect FROM users WHERE user_id={my_id}''').fetchall()[
                    0]
                marriage = '–Ω–µ—Ç –±—Ä–∞–∫–∞' if res[0] == 'no' else res[0]
                about, prize = res[1], res[2]
                who = '–Ω–µ—Ç –∫—Ç–æ–∫–∞–ª–∫–∏' if res[3] == 'no' else res[3]
                nickname = '–Ω–µ—Ç –Ω–∏–∫–∞' if res[4] == 'no' else res[4]
                respect = res[5] if res[5] != None else 0
                send(f'‚≠ê‚≠ê–ø—Ä–æ—Ñ–∏–ª—å‚≠ê‚≠ê\n–í–∞—Å –∑–æ–≤—É—Ç {my_name} {my_surname}\n–ë—Ä–∞–∫: {marriage}\n–æ –≤–∞—Å: {about}\n'
                     f'–ø—Ä–∏–∑: {prize}\n'
                     f'–∫—Ç–æ–∫–∞–ª–∫–∞: {who}\n–Ω–∏–∫: {nickname}\n'
                     f'—É–≤–∞–∂–µ–Ω–∏–µ: {respect}')

            elif '–∫—Ç–æ —è' in text:
                try:
                    wh = f"{random.choice(['–∫–æ–ø—á—ë–Ω–Ω—ã–π', '—Å–æ–ª—ë–Ω–Ω—ã–π', '—Å–ª–∞–¥–∫–∏–π', '–∂—ë—Å—Ç–∫–∏–π', '–º—è–≥–∫–∏–π', '—Å–≤–µ–∂–∏–π', '—Ç—É—Ö–ª—ã–π'])} " \
                         f"{random.choice(['–Ω–∏–≥–µ—Ä', '—á–µ–ª–æ–≤–µ–∫', '–º–∞–≥', '–∏–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–∏–Ω', '–¥–∏—Ç—è –º–∏—Ä–∞', '–≤–∞—Ä–µ–Ω–∏–∫', '–ø–µ–ª—å–º–µ–Ω—å', '–æ–ª–∞–¥—É—à–µ–∫'])}"
                    if get('who', my_id)[0] == 'no':
                        exec(f'''UPDATE users SET who="{wh}" WHERE user_id={my_id}''')
                        send(f'–í—ã {wh}')
                    else:
                        send(f"–í—ã {get('who', my_id)[0]}")
                except:
                    cur.execute(
                        f'''INSERT OR IGNORE INTO users(user_id, marriage, status, deads, who, nickname, respect) VALUES({my_id}, "no", "no", 0, "no", "no", 0)''')
                    con.commit()
            elif '–∫—Ç–æ –≤—Å–µ' in text:
                member = vk.method('messages.getConversationMembers', {'peer_id': 2000000000 + event.chat_id})['items']
                members = []
                for i in member:
                    try:
                        nick = get('nickname', i['member_id'])[0]
                    except:
                        nick = '–Ω–µ—Ç –Ω–∏–∫–∞!'
                    try:
                        gt = get('who', i['member_id'])[0]
                    except:
                        gt = '–Ω–µ—Ç –∫—Ç–æ–∫–∞–ª–∫–∏'
                    if nick == 'no':
                        nick = '–Ω–µ—Ç –Ω–∏–∫–∞'
                    if gt == 'no':
                        gt = '–Ω–µ—Ç –∫—Ç–æ–∫–∞–ª–∫–∏'
                    if '-' not in str(i['member_id']):
                        user_get = vks.users.get(user_ids=i['member_id'], fields=['screen_name'])
                        user_get = user_get[0]
                        first_name = user_get['first_name']
                        last_name = user_get['last_name']

                        members.append(f'@{user_get["screen_name"]} ({first_name} {last_name} ({nick})) - {gt}')
                        print(f'@{user_get["screen_name"]} ({first_name} {last_name} ({nick})) - {gt}')
                st = '\n'.join(reversed(members))
                send(f"–£—á–∞—Å—Ç–Ω–∏–∫–∏ –±–µ—Å–µ–¥—ã:\n {st}")
            elif '–∫—Ç–æ' in text:
                send('–Ø —É–≤–µ—Ä–µ–Ω —ç—Ç–æ...')
                member = vk.method('messages.getConversationMembers', {'peer_id': 2000000000 + event.chat_id})['items']
                rand = random.choice(member)
                while '-' in str(rand['member_id']):
                    rand = random.choice(member)
                result = vk.method('users.get', {'user_ids': rand['member_id'], 'fields': ['screen_name']})
                screen_name = result[0]['screen_name']
                send(f'@{screen_name} ({result[0]["first_name"]} {result[0]["last_name"]})')
            elif '–º–æ–π –Ω–∏–∫' in text:
                send(f'–í–∞—Å –∑–æ–≤—É—Ç {nickname}')
            elif '–Ω–∏–∫' in text:
                send(f'–í–∞—à –Ω–∏–∫ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {text.split("–Ω–∏–∫")[1]}')
                exec(f'''UPDATE users SET nickname="{text.split('–Ω–∏–∫')[1]}" WHERE user_id={my_id}''')
            else:
                send('–í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—ÉüòÉ')
        if '–∫–∏–∫' in text:
            send('—Ö–∞–π-—Ö–µ—Ç')
        if '–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å' in text:
            vk.method('messages.editChat', {'chat_id': event.chat_id, 'title': text.split('–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å', maxsplit=1)[1]})
        try:
            if text == '–¥—É—ç–ª—å':
                if get("duel", my_id)[0] == 'no':
                    exec(f'UPDATE users SET duel="{user_id} 0" WHERE user_id={my_id}')
                    exec(f'UPDATE users SET duel="{my_id} 0" WHERE user_id={user_id}')
                    keyboard_1 = VkKeyboard(one_time=False, inline=True)
                    keyboard_1.add_callback_button(label='–î–∞', color=VkKeyboardColor.POSITIVE)
                    keyboard_1.add_callback_button(label='–ù–µ—Ç', color=VkKeyboardColor.NEGATIVE)
                    keyboard_1.add_line()
                    keyboard_1.add_callback_button(label='–û—Ç–º–µ–Ω–∏—Ç—å', color=VkKeyboardColor.SECONDARY)
                    send(f'{my_name} {my_surname} –æ–±—å—è–≤–∏–ª –¥—É—ç–ª—å —Å {user_name} {user_surname}\n\n{user_name}, –í—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –¥—É—ç–ª—å?', keyboard_1.get_keyboard())
                else:
                    send('–°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –¥—É—ç–ª—å!')
            if '–æ—Ç–º–µ–Ω–∏—Ç—å' in text:
                if get('duel', my_id)[0].split()[0] != 'no':
                    appon = int(get('duel', my_id)[0].split()[0])
                    exec(f'UPDATE users SET duel="no" WHERE user_id={appon}')
                    exec(f'UPDATE users SET duel="no" WHERE user_id={my_id}')
                    send('–î—É—ç–ª—å –æ—Ç–º–µ–Ω—ë–Ω!')
                else:
                    send('–£ –≤–∞—Å –∏ —Ç–∞–∫ –Ω–µ—Ç –¥—É—ç–ª–µ–π!')
            keyboard_1 = VkKeyboard(one_time=False, inline=True)
            keyboard_1.add_callback_button(label='–í—ã—Å—Ç—Ä–µ–ªüî´', color=VkKeyboardColor.SECONDARY)
            if get("duel", my_id)[0] != 'no':
                if '–¥–∞' in text:
                    duelant = get('duel', int(get('duel', my_id)[0].split()[0]))[0].split()[0]
                    if my_id == int(duelant):
                        send('–í—ã –ø—Ä–∏–Ω—è–ª–∏ –¥—É—ç–ª—å!', keyboard_1.get_keyboard())
                        exec(f'UPDATE users SET duel="{get("duel", my_id)[0].split()[0]} 1" WHERE user_id={my_id}')
                        exec(f'UPDATE users SET duel="{my_id} 1" WHERE user_id={ int(get("duel", my_id)[0].split()[0])}')
                    else:
                        print(int(get('duel', my_id)[0].split()[0]))
                        send('–í–∞–º –Ω–µ –æ–±—å—è–≤–ª—è–ª–∏ –¥—É—ç–ª—å!')
                if '–Ω–µ—Ç' in text:
                    if my_id == int(get('duel', my_id)[0].split()[0]):
                        send('–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –¥—É—ç–ª—è‚òπ\n–¢–µ–ø–µ—Ä—å –≤–∞—à–µ —É–≤–∞–∂–µ–Ω–∏–µ —Ä–∞–≤–Ω–æ –Ω—É–ª—é!')
                    else:
                        send('–í–∞–º –Ω–µ –æ–±—å—è–≤–ª—è–ª–∏ –¥—É—ç–ª—å!')
                    exec(f'UPDATE users SET duel="{my_id} 0" WHERE duel={my_id}')
                    exec(f'UPDATE users SET duel="{my_id} 0" WHERE user_id={my_id}')
                    exec(f'UPDATE users SET duel="no" WHERE user_id={my_id}')
            if '–≤—ã—Å—Ç—Ä–µ–ª' in text:
                if my_id == int(get('duel', int(get('duel', my_id)[0].split()[0]))[0].split()[0]):
                    user_get = vks.users.get(user_ids=int(get("duel", my_id)[0].split()[0]), fields=['screen_name'])
                    user_get = user_get[0]
                    aponent = f"@{user_get['screen_name']} ({user_get['first_name']} {user_get['last_name']})"
                    vybr = random.choice([f'–í—ã –≤—ã—Å—Ç—Ä–µ–ª–∏–ª–∏ –∏ –ø–æ–ø–∞–ª–∏!\n{aponent} –ø–æ–≤–µ—Ä–∂–µ–Ω!', '–í—ã –≤—ã—Å—Ç—Ä–µ–ª–∏–ª–∏ –∏ –ø—Ä–æ–º–∞—Ö–Ω—É–ª–∏—Å—å!\n–ü—Ä–∏—à–ª–∞ –æ—á–µ—Ä–µ–¥—å –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞!'])
                    if '–ø–æ–ø–∞–ª–∏' in vybr:
                        exec(f'UPDATE users SET duel="no" WHERE user_id={int(get("duel", my_id)[0].split()[0])}')
                        exec(f'UPDATE users SET duel="no" WHERE user_id={my_id}')
                        send(vybr)
                    else:
                        send(vybr, keyboard_1.get_keyboard())

            if text in ['—Å—Ç–∞—Ä—Ç', 'start', '/start', '/—Å—Ç–∞—Ä—Ç', '–ø—Ä–∏–≤–µ—Ç', 'hello', '/hello', '/–ø—Ä–∏–≤–µ—Ç']:
                send('–ù–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã: \nvk.com/@my_jack_bot-komandy-jack-bot')
            if '—Ä—É–ª–µ—Ç–∫–∞' in text:
                send('–ó–∞—Ä—è–∂–∞–µ–º —Ä–µ–≤–æ–ª—å–µ—Ä')
                rand = random.choice([' –ø—Ä–æ–∏–≥—Ä–∞–ª–∏\n–û—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑‚òπ', ' –≤—ã–∂–∏–ª–∏!\n –ø–æ–∑–¥—Ä–∞–≤–ª—è—é)'])
                send(f'{my_name}, –≤—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫—É—Ä–æ–∫ –∏...{rand}')
            if user_name != False:
                if text == '–±—Ä–∞–∫':
                    marriage = get('marriage', my_id)[0]
                    if my_id != user_id:
                        if marriage != 'no':
                            exec(f'''UPDATE users SET marriage="no" WHERE marriage="{my_name} {my_surname}"''')
                            exec(f'''UPDATE users SET marriage="no" WHERE marriage="{user_name} {user_surname}"''')
                        send(f'–ë—Ä–∞–∫ —Å {user_name} {user_surname} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ωüíç')
                        exec(f'''UPDATE users SET marriage="{user_name} {user_surname}" WHERE user_id={my_id}''')
                        exec(f'''UPDATE users SET marriage="{my_name} {my_surname}" WHERE user_id={user_id}''')
                    else:
                        send('–Ø –≤–∞—Å –ø–æ–Ω–∏–º–∞—é, –Ω–æ –∫–∞–∫ –±—ã –≤—ã –Ω–µ —Ö–æ—Ç–µ–ª–∏ –∏–º–µ—Ç—å –±—Ä–∞–∫ —Å —Å–∞–º–∏–º —Å–æ–±–æ–π —Ç–∞–∫ –Ω–µ–ª—å–∑—è‚òπ')
                elif '–ø–æ–∑–¥—Ä–∞–≤–ª—è—é' in text:
                    sender = text.split('–ø–æ–∑–¥—Ä–∞–≤–ª—è—é', maxsplit=1)[1]
                    if sender != '':
                        send(f'{user_name} {user_surname}, {my_name} {my_surname} –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ—Ç –≤–∞—Å {sender}')
                    else:
                        send(f'{user_name} {user_surname}, {my_name} {my_surname} –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ—Ç –≤–∞—Å!')
                if '+' in text or '–∂–∏–∑' in text[:5]:
                    if my_id == user_id:
                        send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–∫–∞–∑–∞—Ç—å —É–≤–∞–∂–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ‚ùó')
                    if respect != None:
                        send(f'–£–≤–∞–∂–µ–Ω–∏–µ –æ–∫–∞–∑–∞–Ω–æ (+{text.count("+")})')
                        respect = get('respect', user_id)[0]
                        exec(f'UPDATE users SET respect={respect} + {text.count("+")} WHERE user_id={user_id}')
                    if respect == None:
                        exec(f'UPDATE users SET respect=0 WHERE user_id={user_id}')
                        exec(f'UPDATE users SET respect={respect} + {text.count("+")} WHERE user_id={user_id}')

                if '–ø—Ä–∏–∑' in text:
                    if '-' not in str(user_id):
                        if my_id == user_id:
                            send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–∞—Ç—å –ø—Ä–∏–∑ —Å–∞–º–æ–º—É —Å–µ–±–µ‚ùó')
                        else:
                            send(f'{user_name} {user_surname}, –≤–∞–º –≤—ã–¥–∞–Ω –ø—Ä–∏–∑ {text.split("–ø—Ä–∏–∑")[1]}')
                            exec(f'''UPDATE users SET prize="{text.split("–ø—Ä–∏–∑", maxsplit=1)[1]}" WHERE user_id={user_id}''')
                    else:
                        send('–û—à–∏–±–∫–∞')

                # === roll-play commands ===
                if text == '—É–±–∏—Ç—å':
                    send(f'{my_name} {my_surname} —É–±–∏–ª(–∞) {user_name} {user_surname}')
                if text == '—Å–ø—Å' or text == '—Å–ø–∞—Å–∏–±–æ':
                    send(f'{my_name} {my_surname} –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏–ª(–∞) {user_surname}')
                if text == '–º–∏–Ω–µ—Ç':
                    send(f'{my_name} {my_surname} —Å–¥–µ–ª–∞–ª(–∞) –º–∏–Ω–µ—Ç {user_surname}')
                if text == '—Å–∂–µ—á—å':
                    send(f'{my_name} {my_surname} —Å–∂—ë–≥ {user_name} {user_surname}')
                if text == '–∞—Ö–∞—Ö':
                    send(f'{my_name} {my_surname} –ø–æ—Å–º–µ—è–ª—Å—è –Ω–∞–¥ —à—É—Ç–∫–æ–π {user_name} {user_surname}')
                if text == '—Å–µ–∫—Å':
                    send(f'{my_name} {my_surname} —Å–¥–µ–ª–∞–ª —Å–µ–∫—Å —Å {user_name} {user_surname}')
                if text == '–∫—É—Å—å':
                    send(f'{my_name} {my_surname} —É–∫—É—Å–∏–ª(–∞) {user_name} {user_surname}')
                if text == '–µ–±–ª—è':
                    send(f'{my_name} {my_surname} –∂—ë—Å—Ç–∫–æ —Ç—Ä–∞—Ö–Ω—É–ª(–∞) {user_name} {user_surname}')
                if text == '–≥—Ä—É–ø–æ–≤—É—Ö–∞':
                    send(f'{my_name} {my_surname} –∏ –µ—â—ë 4 —á–µ–ª–æ–≤–µ–∫–∞ –∑–∞—Å—É–Ω—É–ª–∏ —Å–≤–æ–∏ –∫–æ–Ω—Ü—ã –≤ —É–∑–∫—É—é –¥—ã—Ä–∫—É –∫ {user_name} {user_surname}')
                if text == '—É–µ–±–∞—Ç—å':
                    send(f'{my_name} {my_surname} —É–µ–±–∞–ª {user_name} {user_surname}')
                if text == '–≤—ã–∫–∏–Ω—É—Ç—å –≤ –æ–∫–Ω–æ':
                    send(f'{my_name} {my_surname} –≤—ã–∫–∏–Ω—É–ª –≤ –æ–∫–Ω–æ {user_name} {user_surname}')
                if text == '—Å—å–µ—Å—Ç—å':
                    send(f'{my_name} {my_surname} —Å—ä–µ–ª {user_name} {user_surname}')
                if text == '—É—Ä–æ–Ω–∏—Ç—å –º–∞—Ç—å –≤ –∫–∞–Ω–∞–≤—É':
                    send(f'{my_name} {my_surname} —É—Ä–æ–Ω–∏–ª –º–∞—Ç—å {user_name} {user_surname} –≤ –∫–∞–Ω–∞–≤—É')
                if text == '–æ–ø—É—Å—Ç–∏—Ç—å':
                    send(f'{my_name} {my_surname} –æ–ø—É—Å—Ç–∏–ª {user_name} {user_surname}')
                if text == '–ø–æ—Ä–Ω–æ':
                    send(f'–±–µ—à–µ–Ω—ã–π –∫–∞—Ä–ª–∏–∫ {my_name} {my_surname} –∂–µ—Å—Ç–∫–æ –ø—Ä–æ–¥–æ–ª–±–∏–ª –Ω–µ–∂–Ω—É—é –±–µ–ª–æ—Å–Ω–µ–∂–∫—É {user_name} {user_surname}')

            else:
                pass
        except:
            send('–û—à–∏–±–∫–∞!')